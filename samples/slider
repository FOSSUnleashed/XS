#! /usr/local/bin/xs --

pgm = $0
file = $1
start = $2; ~ $start () && start = 1

~ $1 --help && {
	cat <<'EOF'
A markup command begins each line:
.h Header text (one line)
.s Subheader text (one line)
.f Footer text (one line)
.i indent amount (number of leading blanks)
.p Paragraph text (end with a completely blank line)
.b Block (literal, nowrap) text (end with a completely blank line)
.^ Page break; pause for key

Navigation
  next slide:     n <space> <enter>
  previous slide: p <backspace> <delete>
  exit:           q . <esc>
EOF
	exit 1
}

~ $#* 0 && throw error `{basename $pgm} 'file [START_PAGE]'

rows = `{tput lines}
cols = `{tput cols}

let (header; subheader; footer; indent = ''; text = ''; pn = 1; rc) {
	fn indent {|n|
		for i `{seq $n} {printf ' '}
	}

	fn fill {|t|
		printf $indent
		let (wl = <={%split ' ' $t}; wc; \
				cw = <={$&wid $indent}) {
			for w $wl {
				wc = <={$&wid $w}
				if {`($wc+$cw) :ge $cols} {
					printf \n%s $indent
					cw = <={$&wid $indent}
					rc = `($rc+1)
				}
				printf '%s ' $w
				cw = `($cw+$wc+1)
			}
		}
		printf \n\n
		rc = `($rc+2)
	}

	fn render {|pars|
		let (pt = <={%split \n $pars}; ob = false) {
			for t $pt {
				let ((w1 lr) = <={~~ $t *\ *}) {
					if {~ $w1 .b} {
						ob = true
						printf ' %s'\n $lr
						rc = `($rc+1)
					} else {
						if $ob {
							printf \n
							rc = `($rc+1)
							ob = false
						}
						fill $t
					}
				}
			}
		}
	}

	fn waitkey {
		let (kc) {escape {|fn-done| {while (true) {
			kc = <={%without-echo %read-char}
			if {~ $kc \b \x7f p} {exec $pgm $file `($pn-1)}
			if {~ $kc q . \e} {exit}
			if {~ $kc ' ' \n n} {done}
		}}}}
	}

	fn showpage {
		clear
		printf %s%s%s\n <=.%ab <={%argify $header} <=.%an
		printf %s%s%s\n <=.%ai <={%argify $subheader} <=.%an
		printf \n
		rc = 5
		render $text
		while {$rc :lt $rows} {
			printf \n
			rc = `($rc+1)
		}
		printf '%s[%3d] %s%s'\n <=.%ad $pn <={%argify $footer} <=.%an
		waitkey
		pn = `($pn+1)
		text = ''
	}

	%without-cursor \
	%with-read-lines $file {|line|
		let ((w1 lr) = <={~~ $line *\ * *}) {
			if {$start :gt $pn} {
				~ $w1 '.^' && pn = `($pn+1)
			} else {
				switch $w1 (
				'.h' {header = $lr}
				'.s' {subheader = $lr}
				'.f' {footer = $lr}
				'.i' {indent = `` '' {indent $lr}}
				'.p' {text = $text^' '^$lr}
				'.b' {text = $text^\n.b^$indent^$lr}
				'.^' {showpage}
				{text = $text^\n}
				)
			}
		}
	}
}
